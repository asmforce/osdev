[0000 0000   0000 0000]            лимит сегмента [0:15]

[0000 0000   0000 0000   0000 0000] адрес базы [0:23]

[0000] тип сегмента (или шлюза):
       при поднятом флаге 'S':
        [0] флаг данные/код
        (0) данные:                           // тут порядок противоположный. т.е. сначала идет A,V,E потом флаг данные/код
            [0] флаг 'E' направления роста
            (0) вверх - собственно, данные
            (1) вниз  - стек

            [0] флаг 'V' разрешения записи
            (0) запись запрещена
            (1) запись разрешена

            [0] флаг 'A' доступности (обращения) (см.внизу)
            (0) обращения не было
            (1) обращение было

        (1) код:                              // тут порядок противоположный. т.е. сначала идет A,R,C потом флаг данные/код
            [0] флаг 'C' подчиненности (см.внизу)
            (0) не подчинен
            (1) подчинен

            [0] флаг 'R' разрешения чтения
            (0) чтение запрещено
            (1) чтение разрешено

            [0] флаг 'A' доступности (обращения) (см.внизу)
            (0) обращения не было
            (1) обращение было

       при опущеном флаге 'S': // первый бит: (0) - 16тиразрядный сегмент, (1) - 32хразрядный
        (0000) зарезервировано
        (0001) 16-ти битный TSS (свободен)
        (0010) LDT
        (0011) 16-ти битный TSS (занят)
        (0100) 16-ти битный шлюз вызова
        (0101) шлюз задачи
        (0110) 16-ти битный шлюз прерывания
        (0111) 16-ти битный шлюз ловушки
        (1000) зарезервировано
        (1001) 32-х битный TSS (свободен)
        (1010) зарезервировано
        (1011) 32-х битный TSS (занят)
        (1100) 32-х битный шлюз вызова
        (1101) зарезервировано
        (1110) 32-х битный шлюз прерывания
        (1111) 32-х битный шлюз ловушки

[0] флаг 'S' системный
   (0) системный сегмент
   (1) сегмент данных или кода

[00] 'DPL' Descriptor Privilege Level (0,1,2,3)

[0] флаг 'P' присутствия сегмента, если флаг сброшен, то при обращении к странице будет сгенерировано исключение-прерывание #NP 0Bh

[0000] лимит сегмента [16:19]

[0] 'AVL' значение не играет никакой роли

[0] 'O'   всегда должен быть равен нулю

[0] 'D/B'
   называется 'B' для сегмента данных:
    - если этот бит сброшен (0), то разрешены все смещения от 0 до лимита
    - если установлен (1) – то все, кроме от 0 до лимита
    - если попытаться обратится за пределы лимита, будет сгенерировано исключение-прерывание #GP 0Dh (защита)
    (0) для адресации стека будет использован SP
    (1) для адресации стека будет использован ESP

   называется 'D' для сегмента кода:
    (0) будут по-умолчанию использоваться 16битные операнды и смещения (offsets)
    (1) будут по-умолчанию использоваться 32битные операнды и смещения (offsets)

[0] 'G' флаг гранулярности
    (0) лимит измеряется в байтах
    (1) лимит измеряется в 4-х килобайтных массивах

[0000 0000] адрес базы [24:31]

















FENIX_GDT:
...
FENIX_GDTR:
.LIMIT DW $-FENIX_GDT ; 16-ти битный лимит таблицы
.BASE  DD ?           ; 32-х битный базовый адрес таблицы


mov eax, FENIX_GDT
mov FENIX_GDTR.BASE, eax
lgdt fword FENIX_GDTR


       ЛИМИТ  ТАБЛИЦЫ  GDT                БАЗОВЫЙ АДРЕС GDT
GDTR: [0000 0000 0000 0000]   [0000 0000 0000 0000 0000 0000 0000 0000]





бит доступности A:
	Устанавливается (в единицу) процессором при обращении к памяти через этот дескриптор.
	Сбрасывается (в ноль) операционной системой.

Бит подчинения C:
	Указывает, что данный сегмент кода является подчиненным. Это значит, что программа с низким уровнем привилегий может передать управление в этот сегмент и текущий уровень привилегий не изменится.


селектор:
[00]               'RPL' запрашиваемый уровень привилегий
[0]                флаг 'TI'
                   (0) индекс в таблице GDT
                   (1) индекс в таблице LDT
[0 0000 0000 0000] индекс дескриптора в таблице
